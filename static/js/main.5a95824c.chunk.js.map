{"version":3,"sources":["components/PageTrackYourTime.js","utils/utils.js","components/WDButton.js","components/WDCard.js","components/tax-fetcher/read-items/ItemMedicare.js","components/tax-fetcher/read-items/ItemSocialSecurity.js","components/tax-fetcher/read-items/ItemTaxWithholding.js","components/WDTextField.js","middleware/databaseConnection.js","components/tax-fetcher/add-items/AddFederalIncomeTax.js","components/tax-fetcher/add-items/AddMedicare.js","components/tax-fetcher/add-items/AddSocialSecurity.js","components/tax-fetcher/add-items/AddTaxWithholding.js","components/tax-fetcher/read-items/ItemFederalIncomeTax.js","components/tax-fetcher/TaxItemContainer.js","components/tax-fetcher/PageTaxFetcher.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["PageTrackYourTime","componentDidMount","initServer","classes","this","props","Card","className","card","CardContent","Typography","title","Component","withStyles","theme","margin","spacing","minWidth","fontSize","range","currentYear","Date","getFullYear","start","end","Currency","value","toFixed","replace","NumberFormatCustom","inputRef","onChange","other","getInputRef","onValueChange","values","target","formattedValue","thousandSeparator","organizeTaxData","taxData","taxItems","federalIncomeTax","medicare","socialSecurity","taxWithholding","sortedData","sort","a","b","year","taxType","hasOwnProperty","undefined","push","items","years","maritalStatuses","Object","freeze","Single","index","name","Married","Separate","withholdingTypes","General","NonResident","payPeriods","Weekly","Biweekly","Semimonthly","Monthly","Quarterly","Semiannual","Annual","Daily","CustomButton","text","click","Button","variant","color","button","onClick","React","PureComponent","marginTop","marginLeft","marginBottom","CustomCard","center","children","display","justifyContent","marginRight","width","ItemMedicare","limits","data","limitViews","sortedLimits","aStatus","maritalStatus","bStatus","limit","item","key","amount","itemData","percent","additionalPercent","align","ItemSocialSecurity","ItemTaxWithholding","displaySortedData","period","payPeriod","type","CustomTextField","label","handleChange","money","TextField","InputLabelProps","shrink","InputProps","inputComponent","startAdornment","InputAdornment","position","endAdornment","error","textField","maxWidth","backendUrls","addItem","itemType","info","async","fetch","method","headers","body","JSON","stringify","request","json","readAll","readAllType","stateDefault","atLeast","notOver","plus","nonTaxable","AddFederalIncomeTax","state","addToServer","notOverAdj","Number","MAX_VALUE","over","then","_","setState","close","event","createText","createFormControl","getItems","FormControl","formControl","InputLabel","Select","createDropDown","array","map","MenuItem","createDropDownForValues","open","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","horizontal","additional","limitMarried","limitSeparated","limitOther","AddMedicare","typography","AddSocialSecurity","ItemFederalncomeTax","keyStart","previousPeriod","periodData","periodName","periodSorted","aPeriod","bPeriod","TaxItemContainer","dialogOpen","dialogClose","taxesNeedUpdate","displayAddItem","itemToAdd","AddTaxWithholding","displayYearData","forEach","length","y","includes","i","gutterBottom","displayEachData","displayFederalType","typeData","ItemFederalIncomeTax","displayWithholdingType","itemToDisplay","types","PageTaxFetcher","selectedTab","updateTaxes","newValue","fetchTaxData","root","AppBar","elevation","Tabs","Tab","flexGrow","backgroundColor","palette","background","paper","themed","appBar","zIndex","drawer","flexShrink","drawerPaper","content","toolbar","mixins","CssBaseline","Toolbar","Drawer","List","ListItem","component","Link","to","ListItemText","primary","path","App","Boolean","window","location","hostname","match","createMuiTheme","light","main","dark","contrastText","secondary","useNextVariants","ReactDOM","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a95824c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Typography } from '@material-ui/core'\n\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing() * 3,\n        minWidth: 275\n    },\n    title: {\n        fontSize: 20\n    }\n})\n\nclass PageTrackYourTime extends Component {\n    componentDidMount = () => {\n        this.initServer()\n    }\n\n    initServer = () => {\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography className={classes.title}><b>Welcome to Track Your Time</b></Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nPageTrackYourTime.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PageTrackYourTime)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport NumberFormat from 'react-number-format'\n\nconst currentYear = new Date().getFullYear()\n\nfunction* range(start, end) {\n    yield start;\n    if (start === end) return;\n    yield* range(start - 1, end);\n}\n\nfunction Currency(value) {\n    return '$' + value.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n}\n\nfunction NumberFormatCustom(props) {\n    const { inputRef, onChange, ...other } = props\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onValueChange={values => {\n                onChange({\n                    target: {\n                        value: values.formattedValue,\n                    },\n                })\n            }}\n            thousandSeparator={true}\n        />\n    )\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nfunction organizeTaxData(taxData) {\n    const taxItems = []\n    const federalIncomeTax = []\n    const medicare = []\n    const socialSecurity = []\n    const taxWithholding = []\n\n    const sortedData = taxData.sort((a, b) => {\n        if (a.year > b.year) return -1\n        if (a.year < b.year) return 1\n        return 0\n    })\n\n    for (const taxType in sortedData) {\n        if (sortedData.hasOwnProperty(taxType)) {\n            const taxData = sortedData[taxType]\n\n            if (taxData.medicare !== undefined)\n                medicare.push(taxData.medicare)\n            else if (taxData.socialSecurity !== undefined)\n                socialSecurity.push(taxData.socialSecurity)\n            else if (taxData.taxWithholding !== undefined)\n                taxWithholding.push(taxData.taxWithholding)\n            else if (taxData.federalIncomeTax !== undefined){\n                federalIncomeTax.push(taxData.federalIncomeTax)\n            }\n        }\n    }\n\n    taxItems[items[0]] = federalIncomeTax\n    taxItems[items[1]] = medicare\n    taxItems[items[2]] = socialSecurity\n    taxItems[items[3]] = taxWithholding\n\n    return taxItems\n}\n\nconst items = [\n    'Federal Income Tax',\n    'Medicare',\n    'Social Security',\n    'Tax Withholding'\n]\n\nconst years = [\n    currentYear, ...range(currentYear - 1, 1990)\n]\n\nconst maritalStatuses = Object.freeze({\n    Single: { index: 0, name: 'Single' },\n    Married: {index: 1, name: 'Married' },\n    Separate: { index: 2, name: 'Separate' }\n})\n\nconst withholdingTypes = Object.freeze({\n    General: 'General',\n    NonResident: 'NonResident'\n})\n\nconst payPeriods = Object.freeze({\n    Weekly: { index: 0, name: 'Weekly'},\n    Biweekly: { index: 1, name: 'Biweekly'},\n    Semimonthly: { index: 2, name: 'Semimonthly'},\n    Monthly: { index: 3, name: 'Monthly'},\n    Quarterly: { index: 4, name: 'Quarterly'},\n    Semiannual: { index: 5, name: 'Semiannual'},\n    Annual: { index: 6, name: 'Annual'},\n    Daily: { index: 7, name: 'Daily'}\n})\n\nexport {\n    payPeriods,\n    withholdingTypes,\n    maritalStatuses,\n    years,\n    items,\n    organizeTaxData,\n    NumberFormatCustom,\n    Currency,\n    currentYear\n}","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    button: {\n        marginTop: theme.spacing() * 3,\n        marginLeft: theme.spacing(),\n        marginBottom: theme.spacing(),\n    },\n})\n\nclass CustomButton extends React.PureComponent {\n    render() {\n        const { text, click } = this.props\n\n        return (<Button\n            variant='contained'\n            color='primary'\n            className={this.props.classes.button}\n            onClick={click}\n        >\n            {text}\n        </Button>)\n    }\n}\n\nexport default withStyles(styles)(CustomButton)","import React from 'react'\nimport { Card, CardContent } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    center: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    card: {\n        marginBottom: theme.spacing() * 3,\n        marginLeft: theme.spacing() * 1.5,\n        marginRight: theme.spacing() * 1.5,\n        width: 325\n    },\n})\n\nclass CustomCard extends React.PureComponent {\n    render() {\n        return (<div className={this.props.classes.center}>\n            <Card className={this.props.classes.card}>\n                <CardContent>\n                    <div>\n                        {this.props.children}\n                    </div>\n                </CardContent>\n            </Card>\n        </div>)\n    }\n}\n\nexport default withStyles(styles)(CustomCard)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography } from '@material-ui/core'\nimport { Currency, maritalStatuses } from '../../../utils/utils'\nimport Card from '../../WDCard'\n\nclass ItemMedicare extends Component {\n    limits = (data) => {\n        const limits = data.limits\n        let limitViews = []\n\n        const sortedLimits = limits.sort((a, b) => {\n            const aStatus = maritalStatuses[a.maritalStatus].index\n            const bStatus = maritalStatuses[b.maritalStatus].index\n\n            if (aStatus < bStatus) return -1\n            if (aStatus > bStatus) return 1\n            return 0\n        })\n\n        for (const limit in sortedLimits) {\n            const item = limits[limit]\n            limitViews.push(\n                <Typography variant='h6' key={item.amount + item.year}>\n                    {item.maritalStatus}: {Currency(item.amount)}\n                </Typography>\n            )\n        }\n\n        return limitViews\n    }\n\n    render() {\n        const { data } = this.props\n\n        const itemData = data[0]\n\n        return (\n            <Card>\n                <Typography variant='h6'>\n                    Percent: {itemData.percent}%\n                            </Typography>\n                <Typography variant='h6'>\n                    Additional: {itemData.additionalPercent}%\n                            </Typography>\n                <Typography align='center' variant='h6'>\n                    Limits\n                            </Typography>\n                {this.limits(itemData)}\n            </Card>\n        )\n    }\n}\n\nItemMedicare.propTypes = {\n    data: PropTypes.array.isRequired\n}\n\nexport default ItemMedicare","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography } from '@material-ui/core'\nimport { Currency } from '../../../utils/utils'\nimport Card from '../../WDCard'\n\nclass ItemSocialSecurity extends Component {\n    render() {\n        const { data } = this.props\n\n        const itemData = data[0]\n\n        return (\n            <Card>\n                <Typography variant='h6'>\n                    Percent: {itemData.percent}%\n                            </Typography>\n                <Typography variant='h6'>\n                    Limit: {Currency(itemData.limit)}\n                </Typography>\n            </Card>\n        )\n    }\n}\n\nItemSocialSecurity.propTypes = {\n    data: PropTypes.array.isRequired\n}\n\nexport default ItemSocialSecurity","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography } from '@material-ui/core'\nimport { Currency } from '../../../utils/utils'\nimport Card from '../../WDCard'\n\nclass ItemTaxWithholding extends Component {\n    displaySortedData = (sortedData) => {\n        const items = []\n\n        for (const period in sortedData) {\n            if (sortedData.hasOwnProperty(period)) {\n                const data = sortedData[period]\n                items.push(\n                    <Typography key={data.year + data.payPeriod + data.amount} variant='h6'>\n                        {data.payPeriod}: {Currency(data.amount)}\n                    </Typography>\n                )\n            }\n        }\n\n        return (items)\n    }\n\n    render() {\n        const { data, type } = this.props\n\n        const sortedData = data.sort((a, b) => {\n            if (a.amount < b.amount) return -1\n            if (a.amount > b.amount) return 1\n            return 0\n        })\n\n        return (\n            <Card>\n                <Typography variant='h5' align='center'>\n                    {type}\n                </Typography>\n\n                {this.displaySortedData(sortedData)}\n            </Card>\n        )\n    }\n}\n\nItemTaxWithholding.propTypes = {\n    data: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default ItemTaxWithholding","import React from 'react'\nimport { InputAdornment, TextField } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { NumberFormatCustom } from '../utils/utils'\n\nconst styles = theme => ({\n    textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n        maxWidth: 120\n    }\n})\n\nclass CustomTextField extends React.PureComponent {\n    render() {\n        const { item, name, label, handleChange, money } = this.props\n\n        return (<TextField\n            InputLabelProps={{ shrink: true }}\n            label={label}\n            InputProps={\n                money ? {\n                    inputComponent: NumberFormatCustom,\n                    startAdornment: <InputAdornment position='start'>$</InputAdornment>,\n                } :\n                { endAdornment: <InputAdornment position='end'>%</InputAdornment> }\n            }\n            error={item === ''}\n            className={this.props.classes.textField}\n            margin='normal'\n            name={name}\n            value={item}\n            onChange={handleChange}\n        />)\n    }\n}\n\nexport default withStyles(styles)(CustomTextField)","const BACKEND_BASE_URL = process.env.NODE_ENV !== 'production' ? \"http://api.weesnerDevelopment.com\" : \"http://0.0.0.0:23567\"\n\nconst backendUrls = {\n    FederalIncomeTax: \"federalIncomeTax\",\n    SocialSecurity: \"socialSecurity\",\n    Medicare: \"medicare\",\n    TaxWithholding: \"taxWithholding\",\n}\n\nasync function addItem(itemType, info) {\n    let request = await fetch(`${BACKEND_BASE_URL}/${itemType}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(info)\n    })\n    return await request.json()\n}\n\nasync function readAll() {\n    let medicare = await readAllType(backendUrls.Medicare)\n    let socialSecurity = await readAllType(backendUrls.SocialSecurity)\n    let federalIncomeTax = await readAllType(backendUrls.FederalIncomeTax)\n    let taxWithholding = await readAllType(backendUrls.TaxWithholding)\n\n    return [medicare, socialSecurity, federalIncomeTax, taxWithholding]\n}\n\nasync function readAllType(itemType) {\n    let request = await fetch(`${BACKEND_BASE_URL}/${itemType}`)\n    return await request.json()\n}\n\nexport {\n    backendUrls,\n    addItem,\n    readAll,\n    readAllType\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport TextField from '../../WDTextField'\nimport Button from '../../WDButton'\nimport { years, maritalStatuses, payPeriods, currentYear } from '../../../utils/utils'\nimport { addItem, backendUrls } from '../../../middleware/databaseConnection'\n\nconst styles = theme => ({\n    horizontal: {\n        display: 'flex',\n        minWidth: 450\n    },\n    formControl: {\n        margin: theme.spacing(),\n        minWidth: 120,\n    },\n})\n\nconst stateDefault = {\n    year: currentYear,\n    maritalStatus: 'Single',\n    atLeast: undefined,\n    notOver: undefined,\n    plus: \"0\",\n    percent: \"0\",\n    nonTaxable: undefined,\n    payPeriod: 'Weekly'\n}\n\nclass AddFederalIncomeTax extends Component {\n    state = stateDefault\n\n    addToServer = () => {\n        let notOverAdj\n        if ((this.state.atLeast !== undefined || this.state.atLeast !== '') && (this.state.notOver === '' || this.state.notOver === undefined))\n            notOverAdj = Number.MAX_VALUE\n        else\n            notOverAdj = Number(this.state.notOver.replace(',', ''))\n\n        addItem(backendUrls.FederalIncomeTax, {\n            year: Number(this.state.year),\n            maritalStatus: this.state.maritalStatus,\n            payPeriod: this.state.payPeriod,\n            over: Number(this.state.atLeast.replace(',', '')),\n            notOver: notOverAdj,\n            plus: Number(this.state.plus.replace(',', '')),\n            percent: Number(this.state.percent),\n            nonTaxable: Number(this.state.nonTaxable.replace(',', ''))\n        }).then(_ => {\n            this.setState(stateDefault)\n            this.props.close()\n        })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value,\n        })\n\n        if (name === 'atLeast') {\n            this.setState({\n                atLeast: event.target.value,\n                nonTaxable: event.target.value\n            })\n        }\n    }\n\n    createText = (item, name, label, money) => {\n        return <TextField\n            item={item}\n            name={name}\n            label={label}\n            money={money}\n            handleChange={this.handleChange(name)} />\n    }\n\n    createFormControl = (item, name, label, getItems) => {\n        return <FormControl className={this.props.classes.formControl}>\n            <InputLabel>\n                {label}\n            </InputLabel>\n            <Select\n                value={item}\n                onChange={this.handleChange(name)}\n                name={name}\n            >\n                {getItems}\n            </Select>\n        </FormControl>\n    }\n\n    createDropDown = (item, name, label, array) => {\n        return this.createFormControl(item, name, label, array.map(item => {\n            return <MenuItem key={item} value={item}>\n                {item}\n            </MenuItem>\n        }))\n    }\n\n    createDropDownForValues = (item, name, label, array) => {\n        return this.createFormControl(item, name, label, Object.values(array).map(item => {\n            return <MenuItem key={item.index} value={item.name}>\n                {item.name}\n            </MenuItem>\n        }))\n    }\n\n    render() {\n        const { classes, open, close } = this.props\n        const { year, maritalStatus, payPeriod, atLeast, notOver, plus, percent, nonTaxable } = this.state\n\n        return (\n            <Dialog open={open} onClose={close} aria-labelledby='add-new-fed-tax-bracket'>\n                <DialogTitle id='add-new-fed-tax-bracket'>\n                    Add New Federal Income Tax Bracket\n                </DialogTitle>\n                <DialogContent>\n                    <div className={classes.horizontal}>\n                        {this.createDropDown(year, 'year', 'Year', years)}\n                        {this.createDropDownForValues(maritalStatus, 'maritalStatus', 'Marital Status', maritalStatuses)}\n                        {this.createDropDownForValues(payPeriod, 'payPeriod', 'Pay Period', payPeriods)}\n\n                    </div>\n                    <div className={classes.horizontal}>\n                        {this.createText(atLeast, 'atLeast', 'At Least', true)}\n                        {this.createText(notOver, 'notOver', 'Not Over', true)}\n                    </div>\n                    <div className={classes.horizontal}>\n                        {this.createText(plus, 'plus', 'Plus', true)}\n                        {this.createText(percent, 'percent', 'Percent')}\n                        {this.createText(nonTaxable, 'nonTaxable', 'Non Taxable', true)}\n                    </div>\n                    <Button\n                        text='save'\n                        click={this.addToServer}\n                    />\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nAddFederalIncomeTax.propTypes = {\n    open: PropTypes.bool.isRequired,\n    close: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(AddFederalIncomeTax)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { DialogTitle, Typography } from '@material-ui/core'\nimport TextField from '../../WDTextField'\nimport Button from '../../WDButton'\nimport { years, currentYear, maritalStatuses } from '../../../utils/utils'\nimport { addItem, backendUrls } from '../../../middleware/databaseConnection'\n\nconst styles = theme => ({\n    horizontal: {\n        display: 'flex',\n        minWidth: 400\n    },\n    formControl: {\n        margin: theme.spacing(),\n        minWidth: 120,\n    },\n    typography: {\n        marginLeft: theme.spacing(),\n        marginTop: theme.spacing() * 2.5,\n        fontSize: 16\n    }\n})\n\nconst stateDefault = {\n    year: currentYear,\n    percent: \"1.45\",\n    additional: \"0.9\",\n    limitMarried: undefined,\n    limitSeparated: undefined,\n    limitOther: undefined\n}\n\nclass AddMedicare extends Component {\n    state = stateDefault\n\n    addToServer = () => {\n        addItem(backendUrls.Medicare, {\n            year: Number(this.state.year),\n            percent: Number(this.state.percent),\n            additionalPercent: Number(this.state.additional),\n            limits: [\n                {\n                    year: Number(this.state.year),\n                    amount: Number(this.state.limitMarried.replace(',', '')),\n                    maritalStatus: `${maritalStatuses.Married}`\n                },\n                {\n                    year: Number(this.state.year),\n                    amount: Number(this.state.limitSeparated.replace(',', '')),\n                    maritalStatus: `${maritalStatuses.Separate}`\n                },\n                {\n                    year: Number(this.state.year),\n                    amount: Number(this.state.limitOther.replace(',', '')),\n                    maritalStatus: `${maritalStatuses.Single}`\n                }\n            ]\n        }).then(_ => {\n            this.setState(stateDefault)\n            this.props.close()\n        })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value,\n        });\n    }\n\n    createText = (item, name, label, money) => {\n        return <TextField\n            item={item}\n            name={name}\n            label={label}\n            money={money}\n            handleChange={this.handleChange(name)} />\n    }\n\n    render() {\n        const { classes, open, close } = this.props\n        const { year, percent, additional, limitMarried, limitSeparated, limitOther } = this.state\n\n        return (\n            <Dialog open={open} onClose={close} aria-labelledby='add-new-medicare'>\n                <DialogTitle id='add-new-medicare'>\n                    Add New Medicare\n                </DialogTitle>\n                <DialogContent>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>\n                            Year\n                            </InputLabel>\n                        <Select\n                            value={year}\n                            onChange={this.handleChange('year')}\n                            name='year'\n                        >\n                            {\n                                years.map(item => {\n                                    return <MenuItem key={item} value={item}>\n                                        {item}\n                                    </MenuItem>\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n                    <div className={classes.horizontal}>\n                        {this.createText(percent, 'percent', 'Percent')}\n                        {this.createText(additional, 'additional', 'Additional')}\n                    </div>\n                    <Typography className={classes.typography}>Limits</Typography>\n                    <div className={classes.horizontal}>\n                        {this.createText(limitOther, 'limitOther', 'Single', true)}\n                        {this.createText(limitMarried, 'limitMarried', 'Married', true)}\n                        {this.createText(limitSeparated, 'limitSeparated', 'Separated', true)}\n                    </div>\n\n                    <Button\n                        text='Save'\n                        click={this.addToServer}\n                    />\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nAddMedicare.propTypes = {\n    open: PropTypes.bool.isRequired,\n    close: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(AddMedicare)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport TextField from '../../WDTextField'\nimport Button from '../../WDButton'\nimport { years, currentYear } from '../../../utils/utils'\nimport { addItem, backendUrls } from '../../../middleware/databaseConnection'\n\nconst styles = theme => ({\n    horizontal: {\n        display: 'flex',\n        minWidth: 400\n    },\n    formControl: {\n        margin: theme.spacing(),\n        minWidth: 120,\n    },\n})\n\nconst stateDefault = {\n    year: currentYear,\n    percent: \"6.2\",\n    limit: undefined\n}\n\nclass AddSocialSecurity extends Component {\n    state = stateDefault\n\n    addToServer = () => {\n        addItem(backendUrls.SocialSecurity, {\n            year: Number(this.state.year),\n            percent: Number(this.state.percent),\n            limit: Number(this.state.limit.replace(',', ''))\n        }).then(_ => {\n            this.setState(stateDefault)\n            this.props.close()\n        })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value,\n        });\n    }\n\n    render() {\n        const { classes, open, close } = this.props\n        const { year, percent, limit } = this.state\n\n        return (\n            <Dialog open={open} onClose={close} aria-labelledby='add-new-social-security'>\n                <DialogTitle id='add-new-social-security'>\n                    Add New Social Security\n                </DialogTitle>\n                <DialogContent>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>\n                            Year\n                            </InputLabel>\n                        <Select\n                            value={year}\n                            onChange={this.handleChange('year')}\n                            name='year'\n                        >\n                            {\n                                years.map(item => {\n                                    return <MenuItem key={item} value={item}>\n                                        {item}\n                                    </MenuItem>\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n                    <div className={classes.horizontal}>\n                        <TextField\n                            item={percent}\n                            name='percent'\n                            label='Percent'\n                            handleChange={this.handleChange('percent')} />\n                        <TextField\n                            item={limit}\n                            name='limit'\n                            label='Limit'\n                            money={true}\n                            handleChange={this.handleChange('limit')} />\n                    </div>\n                    <Button\n                        text='Save'\n                        click={this.addToServer}\n                    />\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nAddSocialSecurity.propTypes = {\n    open: PropTypes.bool.isRequired,\n    close: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(AddSocialSecurity)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { DialogTitle } from '@material-ui/core'\nimport TextField from '../../WDTextField'\nimport Button from '../../WDButton'\nimport { years, withholdingTypes, payPeriods, currentYear } from '../../../utils/utils'\nimport { addItem, backendUrls } from '../../../middleware/databaseConnection'\n\nconst styles = theme => ({\n    horizontal: {\n        display: 'flex',\n        minWidth: 450\n    },\n    formControl: {\n        margin: theme.spacing(),\n        minWidth: 120,\n    },\n})\n\nconst stateDefault = {\n    year: currentYear,\n    type: 'General',\n    payPeriod: 'Weekly',\n    amount: undefined\n}\n\nclass AddFederalIncomeTax extends Component {\n    state = stateDefault\n\n    addToServer = () => {\n        addItem(backendUrls.TaxWithholding, {\n            year: Number(this.state.year),\n            type: this.state.type,\n            payPeriod: this.state.payPeriod,\n            amount: Number(this.state.amount.replace(',', ''))\n        }).then(_ => {\n            this.setState(stateDefault)\n            this.props.close()\n        })\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            ...this.state,\n            [name]: event.target.value,\n        });\n    }\n\n    render() {\n        const { classes, open, close } = this.props\n        const { year, payPeriod, type, amount } = this.state\n\n        return (\n            <Dialog open={open} onClose={close} aria-labelledby='add-new-tax-withholding'>\n                <DialogTitle id='add-new-tax-withholding'>\n                    Add New Tax Withholding\n                </DialogTitle>\n                <DialogContent>\n                    <div className={classes.horizontal}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>\n                                Year\n                            </InputLabel>\n                            <Select\n                                value={year}\n                                onChange={this.handleChange('year')}\n                                name='year'\n                            >\n                                {\n                                    years.map(item => {\n                                        return <MenuItem key={item} value={item}>\n                                            {item}\n                                        </MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>\n                                Type\n                            </InputLabel>\n                            <Select\n                                value={type}\n                                onChange={this.handleChange('type')}\n                                name='type'\n                            >\n                                {\n                                    Object.values(withholdingTypes).map(item => {\n                                        return <MenuItem key={item} value={item}>\n                                            {item}\n                                        </MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>\n                                Pay Period\n                            </InputLabel>\n                            <Select\n                                name='payPeriod'\n                                value={payPeriod}\n                                onChange={this.handleChange('payPeriod')}\n                            >\n                                {\n                                    Object.values(payPeriods).map(item => {\n                                        return <MenuItem key={item.index} value={item.name}>\n                                            {item.name}\n                                        </MenuItem>\n                                    })}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <TextField\n                            item={amount}\n                            name='amount'\n                            label='Amount'\n                            money={true}\n                            handleChange={this.handleChange('amount')} />\n                    </div>\n                    <Button\n                        text='Save'\n                        click={this.addToServer}\n                    />\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nAddFederalIncomeTax.propTypes = {\n    open: PropTypes.bool.isRequired,\n    close: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(AddFederalIncomeTax)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Typography } from '@material-ui/core'\nimport Card from '../../WDCard'\nimport { Currency, payPeriods } from '../../../utils/utils';\n\nclass ItemFederalncomeTax extends Component {\n    keyStart = this.props.data.year + this.props.data.percent\n\n    displaySortedData = (sortedData) => {\n        const items = []\n        let previousPeriod\n\n        for (const periodData in sortedData) {\n            if (sortedData.hasOwnProperty(periodData)) {\n                const period = sortedData[periodData]\n                const over = Currency(period.over)\n                const notOver = Currency(period.notOver)\n                const plus = Currency(period.plus)\n                const percent = period.percent\n                const nonTaxable = Currency(period.nonTaxable)\n\n                let periodName;\n                if (previousPeriod === period.payPeriod) {\n                    periodName = \"\"\n                } else {\n                    previousPeriod = period.payPeriod\n                    periodName =\n                        <div>\n                            <Typography variant='h6' align='center'><u>{period.payPeriod}</u></Typography>\n                            <Typography variant='h6'>When n:</Typography>\n                        </div>\n                }\n\n                items.push(\n                    <div key={this.keyStart + period + periodData + '-div'}>\n                        {periodName}\n                        <Typography variant='h6'>\n                            {over} > n ≤ {notOver}\n                        </Typography>\n                        <Typography variant='h6'>\n                            ((n - {nonTaxable}) + {plus}) * {percent}%\n                        </Typography>\n                        <br />\n                    </div>\n                )\n            }\n        }\n\n        return (items)\n    }\n\n    render() {\n        const { data, type } = this.props\n\n        const sortedData = data.sort((a, b) => {\n            if (a.percent < b.percent) return -1\n            if (a.percent > b.percent) return 1\n            return 0\n        })\n\n        const periodSorted = sortedData.sort((a, b) => {\n            const aPeriod = payPeriods[a.payPeriod].index\n            const bPeriod = payPeriods[b.payPeriod].index\n\n            if (aPeriod < bPeriod) return -1\n            if (aPeriod > bPeriod) return 1\n            return 0\n        })\n\n        return (\n            <Card>\n                <Typography variant='h5' align='center'>\n                    {type}\n                </Typography>\n\n                {this.displaySortedData(periodSorted)}\n            </Card>\n        )\n    }\n}\n\nItemFederalncomeTax.propTypes = {\n    data: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default ItemFederalncomeTax","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\n\nimport Button from '../WDButton'\n\nimport ItemMedicare from './read-items/ItemMedicare'\nimport ItemSocialSecurity from './read-items/ItemSocialSecurity'\nimport ItemTaxWithholding from './read-items/ItemTaxWithholding'\nimport AddFederalIncomeTax from './add-items/AddFederalIncomeTax'\n\nimport AddMedicare from './add-items/AddMedicare'\nimport AddSocialSecurity from './add-items/AddSocialSecurity'\nimport AddTaxWithholding from './add-items/AddTaxWithholding'\nimport ItemFederalIncomeTax from './read-items/ItemFederalIncomeTax'\n\nconst styles = () => ({\n    horizontal: {\n        display: 'flex',\n        justifyContent: 'center',\n        minWidth: 400\n    },\n})\n\nclass TaxItemContainer extends Component {\n    state = {\n        dialogOpen: false\n    }\n\n    dialogOpen = () => {\n        this.setState({\n            dialogOpen: true\n        })\n    }\n\n    dialogClose = () => {\n        this.props.taxesNeedUpdate()\n        this.setState({\n            dialogOpen: false\n        })\n    }\n\n    displayAddItem = () => {\n        const dialogOpen = this.state.dialogOpen\n        let itemToAdd\n\n        switch (this.props.type) {\n            case 'Federal Income Tax':\n                itemToAdd = <AddFederalIncomeTax open={dialogOpen} close={this.dialogClose} />\n                break\n            case 'Medicare':\n                itemToAdd = <AddMedicare open={dialogOpen} close={this.dialogClose} />\n                break\n            case 'Social Security':\n                itemToAdd = <AddSocialSecurity open={dialogOpen} close={this.dialogClose} />\n                break\n            case 'Tax Withholding':\n                itemToAdd = <AddTaxWithholding open={dialogOpen} close={this.dialogClose} />\n                break\n            default:\n                itemToAdd = undefined\n        }\n\n        return itemToAdd\n    }\n\n    displayYearData = (data) => {\n        if (data !== undefined) {\n            let years = []\n\n            data[0].forEach(item => {\n                if (years.length === 0) {\n                    years[0] = [item]\n                } else {\n                    for (let y = 0; y < years.length; y++) {\n                        if (years[y].includes(item)) {\n                            break\n                        }\n\n                        if (item.year === years[y][0].year) {\n                            years[y].push(item)\n                            break\n                        } else if (y === years.length - 1) {\n                            years[years.length] = [item]\n                            break\n                        }\n                    }\n                }\n            })\n\n            const sortedYears = years.sort((a, b) => {\n                if (a[0].year < b[0].year) return 1\n                if (a[0].year > b[0].year) return -1\n                return 0\n            })\n\n            return sortedYears.map((items, i) => {\n                return (\n                    <div key={items[0].year + [i] + \"-label-div\"}>\n                        <Typography\n                            key={items[0].year + \"-label\"}\n                            variant='h5'\n                            align='center'\n                            gutterBottom={true}\n                        >\n                            {items[0].year}\n                        </Typography>\n                        {this.displayEachData(items)}\n                    </div>\n                )\n            })\n        }\n    }\n\n    displayFederalType = (typeData) => {\n        return <ItemFederalIncomeTax key={typeData[0].year + typeData[0].maritalStatus} data={typeData} type={typeData[0].maritalStatus} />\n    }\n\n    displayWithholdingType = (typeData) => {\n        return <ItemTaxWithholding key={typeData[0].year + typeData[0].type} type={typeData[0].type} data={typeData} />\n    }\n\n    displayEachData = (data) => {\n        let itemToDisplay\n        let types = []\n        let items = []\n\n        switch (this.props.type) {\n            case 'Federal Income Tax':\n                data.forEach(item => {\n                    if (types.length === 0) {\n                        types[0] = [item]\n                    } else {\n                        for (let y = 0; y < types.length; y++) {\n                            if (types[y].includes(item)) return\n\n                            if (item.maritalStatus === types[y][0].maritalStatus) {\n                                types[y].push(item)\n                            } else if (y === types.length - 1)\n                                types[types.length] = [item]\n                        }\n                    }\n                })\n\n                for (const type in types)\n                    items.push(this.displayFederalType(types[type]))\n                itemToDisplay = (\n                    <div className={this.props.classes.horizontal} key={data[0].year + \"-federal-income-tax\"}>\n                        {items}\n                    </div>\n                )\n                break\n            case 'Medicare':\n                itemToDisplay = <ItemMedicare key={data[0].year + \"-medicare\"} data={data} />\n                break\n            case 'Social Security':\n                itemToDisplay = <ItemSocialSecurity key={data[0].year + \"-social-security\"} data={data} />\n                break\n            case 'Tax Withholding':\n                data.forEach(item => {\n                    if (types.length === 0) {\n                        types[0] = [item]\n                    } else {\n                        for (let y = 0; y < types.length; y++) {\n                            if (types[y].includes(item)) return\n\n                            if (item.type === types[y][0].type) {\n                                types[y].push(item)\n                            } else if (y === types.length - 1)\n                                types[types.length] = [item]\n                        }\n                    }\n                })\n\n                for (const type in types)\n                    items.push(this.displayWithholdingType(types[type]))\n                itemToDisplay = (\n                    <div className={this.props.classes.horizontal} key={data[0].year + \"-tax-withholding\"}>\n                        {items}\n                    </div>\n                )\n                break\n            default:\n                itemToDisplay = undefined\n        }\n\n        return itemToDisplay\n    }\n\n    render() {\n        const { type, taxData } = this.props\n\n        const typeData = taxData[type]\n\n        return (\n            <div>\n                <Button\n                    key={typeData}\n                    text='Add New'\n                    click={this.dialogOpen}\n                />\n\n                {this.displayYearData(typeData)}\n                {this.displayAddItem()}\n            </div>\n        )\n    }\n}\n\nTaxItemContainer.propTypes = {\n    type: PropTypes.string.isRequired,\n    taxData: PropTypes.array.isRequired,\n    taxesNeedUpdate: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(TaxItemContainer)","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { AppBar, Tabs, Tab } from '@material-ui/core'\nimport { items, organizeTaxData } from '../../utils/utils'\nimport TaxItemContainer from './TaxItemContainer'\nimport { readAll } from '../../middleware/databaseConnection'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n})\n\nclass PageTaxFetcher extends Component {\n    state = {\n        selectedTab: 1,\n        taxesNeedUpdate: false,\n        taxData: []\n    }\n\n    updateTaxes = () => {\n        this.setState({\n            taxesNeedUpdate: true\n        })\n    }\n\n    handleChange = (event, newValue) => {\n        if (newValue !== this.state.selectedTab)\n            this.setState({\n                selectedTab: newValue\n            })\n    }\n\n    fetchTaxData = async () => {\n        this.setState({\n            taxesNeedUpdate: false,\n            taxData: organizeTaxData(await readAll())\n        })\n    }\n\n    componentDidMount = () => {\n        this.fetchTaxData()\n        this.handleChange('', 0)\n    }\n\n    render() {\n        const { classes } = this.props\n        const { selectedTab, taxData, taxesNeedUpdate } = this.state\n\n        if (taxesNeedUpdate)\n            this.fetchTaxData()\n\n        return (\n            <div className={classes.root}>\n                <AppBar position='static' elevation={0}>\n                    <Tabs\n                        value={selectedTab}\n                        onChange={this.handleChange}\n                        variant='scrollable'\n                    >\n                        {\n                            items.map((item, i) =>\n                                <Tab label={item} key={i} />\n                            )\n                        }\n                    </Tabs>\n                </AppBar>\n                <TaxItemContainer\n                    type={items[selectedTab]}\n                    taxData={taxData}\n                    taxesNeedUpdate={this.updateTaxes} />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(PageTaxFetcher)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, Route, BrowserRouter, Switch } from \"react-router-dom\"\nimport { AppBar, Toolbar, CssBaseline, Typography } from '@material-ui/core'\nimport { Drawer, List, ListItem, ListItemText } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport PageTrackYourTime from './PageTrackYourTime'\nimport PageTaxFetcher from './tax-fetcher/PageTaxFetcher';\n\nconst drawerWidth = 160;\n\nconst styles = themed => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: themed.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: themed.mixins.toolbar,\n});\n\nfunction NavBar(props) {\n    const { classes } = props;\n\n    return (\n        <BrowserRouter>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar} elevation={0}>\n                    <Toolbar>\n                        <Typography variant='h6' color='inherit'>Weesner Development</Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    className={classes.drawer}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}>\n                    <div className={classes.toolbar} />\n                    <List>\n                        <ListItem button key='track-your-time' component={Link} to='/track-your-time'>\n                            <ListItemText primary='Track Your Time' />\n                        </ListItem>\n                        <ListItem button key='tax-fetcher' component={Link} to='/tax-fetcher'>\n                            <ListItemText primary='Tax Fetcher' />\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n                <div className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Switch>\n                        <Route path='/track-your-time' component={PageTrackYourTime} />\n                        <Route path='/tax-fetcher' component={PageTaxFetcher} />\n                    </Switch>\n                </div>\n            </div>\n        </BrowserRouter >\n    );\n}\n\nNavBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nexport const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#5fa463',\n            main: '#388e3c',\n            dark: '#27632a',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#f73378',\n            main: '#f50057',\n            dark: '#ab003c',\n            contrastText: '#fff',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n      },\n})\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}